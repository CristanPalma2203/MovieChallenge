// <auto-generated />
using System;
using Infraestructura.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructura.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20230504161651_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dominio.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Synopsis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("Dominio.Models.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PermisoPadre")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permiso");

                    b.HasData(
                        new
                        {
                            Id = 13,
                            Codigo = "administracion",
                            Nombre = "ADMINISTRACIÓN"
                        },
                        new
                        {
                            Id = 14,
                            Codigo = "usuarios",
                            Nombre = "Usuario",
                            PermisoPadre = 13
                        },
                        new
                        {
                            Id = 15,
                            Codigo = "usuario-listar",
                            Nombre = "Lista Usuarios",
                            PermisoPadre = 14
                        },
                        new
                        {
                            Id = 16,
                            Codigo = "usuario-crear",
                            Nombre = "Crear usuario",
                            PermisoPadre = 14
                        },
                        new
                        {
                            Id = 17,
                            Codigo = "usuario-editar",
                            Nombre = "Editar usuario",
                            PermisoPadre = 14
                        },
                        new
                        {
                            Id = 18,
                            Codigo = "usuario-ver",
                            Nombre = "Ver usuario",
                            PermisoPadre = 14
                        },
                        new
                        {
                            Id = 19,
                            Codigo = "modulo-movie",
                            Nombre = "Peliculas"
                        },
                        new
                        {
                            Id = 20,
                            Codigo = "movie",
                            Nombre = "Movie",
                            PermisoPadre = 19
                        },
                        new
                        {
                            Id = 21,
                            Codigo = "movie-listar",
                            Nombre = "Lista Movie",
                            PermisoPadre = 20
                        },
                        new
                        {
                            Id = 22,
                            Codigo = "movie-crear",
                            Nombre = "Crear Movie",
                            PermisoPadre = 20
                        },
                        new
                        {
                            Id = 23,
                            Codigo = "movie-editar",
                            Nombre = "Editar Movie",
                            PermisoPadre = 20
                        },
                        new
                        {
                            Id = 24,
                            Codigo = "movie-eliminar",
                            Nombre = "Eliminar Movie",
                            PermisoPadre = 20
                        });
                });

            modelBuilder.Entity("Dominio.Models.RatingMovie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RatingMovie");
                });

            modelBuilder.Entity("Dominio.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rol");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Rol para la administracion",
                            FechaCreacion = new DateTime(2023, 5, 4, 10, 16, 50, 921, DateTimeKind.Local).AddTicks(2718),
                            Nombre = "Administración del Sistema"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Rol para la administracion de peliculas",
                            FechaCreacion = new DateTime(2023, 5, 4, 10, 16, 50, 921, DateTimeKind.Local).AddTicks(2892),
                            Nombre = "Administración de peliculas"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Rol para usuarios externos",
                            FechaCreacion = new DateTime(2023, 5, 4, 10, 16, 50, 921, DateTimeKind.Local).AddTicks(2979),
                            Nombre = "Rol para usuarios externos"
                        });
                });

            modelBuilder.Entity("Dominio.Models.RolPermiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PermisoId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermisoId");

                    b.HasIndex("RolId");

                    b.ToTable("RolPermiso");

                    b.HasData(
                        new
                        {
                            Id = 18,
                            PermisoId = 13,
                            RolId = 1
                        },
                        new
                        {
                            Id = 19,
                            PermisoId = 15,
                            RolId = 1
                        },
                        new
                        {
                            Id = 20,
                            PermisoId = 16,
                            RolId = 1
                        },
                        new
                        {
                            Id = 21,
                            PermisoId = 17,
                            RolId = 1
                        },
                        new
                        {
                            Id = 22,
                            PermisoId = 18,
                            RolId = 1
                        },
                        new
                        {
                            Id = 23,
                            PermisoId = 14,
                            RolId = 1
                        },
                        new
                        {
                            Id = 24,
                            PermisoId = 19,
                            RolId = 2
                        },
                        new
                        {
                            Id = 25,
                            PermisoId = 21,
                            RolId = 2
                        },
                        new
                        {
                            Id = 26,
                            PermisoId = 22,
                            RolId = 2
                        },
                        new
                        {
                            Id = 27,
                            PermisoId = 23,
                            RolId = 2
                        },
                        new
                        {
                            Id = 28,
                            PermisoId = 24,
                            RolId = 2
                        },
                        new
                        {
                            Id = 29,
                            PermisoId = 20,
                            RolId = 2
                        },
                        new
                        {
                            Id = 30,
                            PermisoId = 20,
                            RolId = 2
                        },
                        new
                        {
                            Id = 31,
                            PermisoId = 21,
                            RolId = 2
                        });
                });

            modelBuilder.Entity("Dominio.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificadorAcceso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdentificadorAcceso")
                        .IsUnique();

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contrasena = "52A5D13A7FD60FFFFF425FA65C3830A165969AA983F06C365E48BAC0F8C75CD9",
                            Email = "admin@gmail.com",
                            IdentificadorAcceso = "admin@gmail.com",
                            Nombre = "Administrador del sistema"
                        },
                        new
                        {
                            Id = 2,
                            Contrasena = "52A5D13A7FD60FFFFF425FA65C3830A165969AA983F06C365E48BAC0F8C75CD9",
                            Email = "user@gmail.com",
                            IdentificadorAcceso = "user@gmail.com",
                            Nombre = "User"
                        });
                });

            modelBuilder.Entity("Dominio.Models.UsuarioRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioRol");

                    b.HasData(
                        new
                        {
                            Id = 32,
                            RolId = 2,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 33,
                            RolId = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 34,
                            RolId = 3,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("Dominio.Models.Movie", b =>
                {
                    b.HasOne("Dominio.Models.Usuario", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("Dominio.Models.RatingMovie", b =>
                {
                    b.HasOne("Dominio.Models.Movie", "Movie")
                        .WithMany("MoviesRating")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.Models.RolPermiso", b =>
                {
                    b.HasOne("Dominio.Models.Permiso", "Permiso")
                        .WithMany()
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Models.Rol", "Rol")
                        .WithMany("Permisos")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Dominio.Models.UsuarioRol", b =>
                {
                    b.HasOne("Dominio.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Models.Usuario", "Usuario")
                        .WithMany("Roles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.Models.Movie", b =>
                {
                    b.Navigation("MoviesRating");
                });

            modelBuilder.Entity("Dominio.Models.Rol", b =>
                {
                    b.Navigation("Permisos");
                });

            modelBuilder.Entity("Dominio.Models.Usuario", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
